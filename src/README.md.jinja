[![Last image-template](https://img.shields.io/badge/last%20template%20update-{{ _copier_answers._commit|replace('-', '--') }}-informational)](https://github.com/Tecnativa/image-template/tree/{{ _copier_answers._commit }})

{%- if push_to_ghcr %}
[![GitHub Container Registry](https://img.shields.io/badge/GitHub%20Container%20Registry-latest-%2324292e)](https://github.com/orgs/{{ project_owner }}/packages/container/package/{{ project_name }})
{%- endif %}

{%- if dockerhub_image %}
[![Docker Hub](https://img.shields.io/badge/Docker%20Hub-latest-%23099cec)](https://hub.docker.com/r/{{ dockerhub_image }})
{%- endif %}

# {{ project_name }}

{%- if pytest %}
## Development

All the dependencies you need to develop this project (apart from Docker itself) are
managed with [poetry](https://python-poetry.org/).

To set up your development environment, run:

```bash
pip install pipx  # If you don't have pipx installed
pipx install poetry  # Install poetry itself
poetry install  # Install the python dependencies and setup the development environment
```

### Testing

To run the tests locally, add `--prebuild` to autobuild the image before testing:

```sh
poetry run pytest --prebuild
```

By default, the image that the tests use (and optionally prebuild) is named
`test:{{ project_name }}`. If you prefer, you can build it separately before testing,
and remove the `--prebuild` flag, to run the tests with that image you built:

```sh
docker image build -t test:{{ project_name }} .
poetry run pytest
```

If you want to use a different image, pass the `--image` command line argument with
the name you want:

```sh
# To build it automatically
poetry run pytest --prebuild --image my_custom_image

# To prebuild it separately
docker image build -t my_custom_image .
poetry run pytest --image my_custom_image
```